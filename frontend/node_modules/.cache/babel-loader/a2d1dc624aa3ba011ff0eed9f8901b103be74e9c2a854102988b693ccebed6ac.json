{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/cognito_project/cognito_integration/src/components/authentication/ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Headercontext } from \"../Headerdata/HeaderData\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport { Link } from \"react-router-dom\";\nimport UserPool from \"./UserPool\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const {\n    setLogin,\n    setForgetPassword,\n    setToastMessage\n  } = useContext(Headercontext);\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewpassword] = useState(\"\");\n  const [confirmPassword, setConfirmpassword] = useState(\"\");\n  const [isVerifyCode, setIsverifycode] = useState(false);\n  const [verificationCode, setVerificationcode] = useState(\"\");\n  const [passwordIcon, setPasswordIcon] = useState(true);\n  const [passwordIcon2, setPasswordIcon2] = useState(true);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\"\n  });\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\"\n    });\n  }, [email, newPassword, confirmPassword, verificationCode]);\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoader(true);\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool\n    });\n    user.forgotPassword({\n      onSuccess: function (result) {\n        console.log(\"call result: \" + result);\n        setLoader(false);\n      },\n      onFailure: function (err) {\n        console.log(err);\n        setError({\n          isError: true,\n          message: err.message || JSON.stringify(err)\n        });\n        setLoader(false);\n      },\n      inputVerificationCode: data => {\n        console.log(\"Input code:\", data);\n        setIsverifycode(true);\n        setLoader(false);\n      }\n    });\n  };\n  // else {\n\n  //   if (confirmPassword == newPassword) {\n  //     user.confirmPassword(verificationCode, newPassword, {\n  //       onSuccess: (data) => {\n  //         setLoader(false);\n  //         console.log(\"onSuccess:\", data);\n  //         setToastMessage({\n  //           display: true,\n  //           message: \"password updated succesfully\"})\n  //           setLogin(true);\n  //           setForgetPassword(false)\n  //       },\n  //       onFailure: (err) => {\n  //       setLoader(false);\n  //         setError({\n  //           isError: true,\n  //           message: err.message || JSON.stringify(err),\n  //         });\n  //       },\n  //     });\n  //   } else {\n  //     setLoader(false);\n  //     setError({\n  //       isError: true,\n  //       message: \"Password and confirmed password are diffferent\",\n  //     });\n  //   }\n  // }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Innerlayout, {\n      heading: \"Forgot Password\",\n      subheading: \"An email with a link will be sent to your email address to change password.\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        required: true,\n        heading: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        actiontype: \"Forgot Password\",\n        action: () => {\n          console.log(\"scdcscsdcs\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"simpletext\",\n          children: \"Have you remembered your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forgot-password\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"JcOhIic+iRFTgyAHLPG1vXLzRRo=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Headercontext","ToastContainer","Layout","Innerlayout","Inputbox","Button","Link","UserPool","jsxDEV","_jsxDEV","ForgotPassword","_s","setLogin","setForgetPassword","setToastMessage","email","setEmail","newPassword","setNewpassword","confirmPassword","setConfirmpassword","isVerifyCode","setIsverifycode","verificationCode","setVerificationcode","passwordIcon","setPasswordIcon","passwordIcon2","setPasswordIcon2","loader","setLoader","error","setError","isError","message","onSubmit","e","preventDefault","user","CognitoUser","Username","Pool","forgotPassword","onSuccess","result","console","log","onFailure","err","JSON","stringify","inputVerificationCode","data","children","heading","subheading","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","actiontype","action","className","to","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/cognito_integration/src/components/authentication/ForgotPassword.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Headercontext } from \"../Headerdata/HeaderData\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport { Link } from \"react-router-dom\";\nimport UserPool from \"./UserPool\";\n\nconst ForgotPassword = () => {\n  const { setLogin, setForgetPassword, setToastMessage } =\n    useContext(Headercontext);\n\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewpassword] = useState(\"\");\n  const [confirmPassword, setConfirmpassword] = useState(\"\");\n  const [isVerifyCode, setIsverifycode] = useState(false);\n  const [verificationCode, setVerificationcode] = useState(\"\");\n  const [passwordIcon, setPasswordIcon] = useState(true);\n  const [passwordIcon2, setPasswordIcon2] = useState(true);\n  const [loader, setLoader] = useState(false);\n\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\",\n  });\n\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\",\n    });\n  }, [email, newPassword, confirmPassword, verificationCode]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool,\n    });\n\n    user.forgotPassword({\n      onSuccess: function (result) {\n        console.log(\"call result: \" + result);\n        setLoader(false);\n      },\n      onFailure: function (err) {\n        console.log(err);\n        setError({\n          isError: true,\n          message: err.message || JSON.stringify(err),\n        });\n        setLoader(false);\n      },\n      inputVerificationCode: (data) => {\n        console.log(\"Input code:\", data);\n        setIsverifycode(true);\n        setLoader(false);\n      },\n    });\n  };\n  // else {\n\n  //   if (confirmPassword == newPassword) {\n  //     user.confirmPassword(verificationCode, newPassword, {\n  //       onSuccess: (data) => {\n  //         setLoader(false);\n  //         console.log(\"onSuccess:\", data);\n  //         setToastMessage({\n  //           display: true,\n  //           message: \"password updated succesfully\"})\n  //           setLogin(true);\n  //           setForgetPassword(false)\n  //       },\n  //       onFailure: (err) => {\n  //       setLoader(false);\n  //         setError({\n  //           isError: true,\n  //           message: err.message || JSON.stringify(err),\n  //         });\n  //       },\n  //     });\n  //   } else {\n  //     setLoader(false);\n  //     setError({\n  //       isError: true,\n  //       message: \"Password and confirmed password are diffferent\",\n  //     });\n  //   }\n  // }\n  // };\n\n  return (\n    <Layout>\n      <Innerlayout\n        heading={\"Forgot Password\"}\n        subheading=\"An email with a link will be sent to your email address to change password.\"\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Inputbox\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          required\n          heading=\"Email\"\n        />\n        <Button\n          actiontype={\"Forgot Password\"}\n          action={() => {\n            console.log(\"scdcscsdcs\");\n          }}\n        />\n        <div>\n          <p className=\"simpletext\">Have you remembered your password</p>\n          <Link to=\"/signin\">\n            <p className=\"forgot-password\">Sign In</p>\n          </Link>\n        </div>\n      </Innerlayout>\n    </Layout>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAC9C,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,QAAQ;IAAEC,iBAAiB;IAAEC;EAAgB,CAAC,GACpDf,UAAU,CAACC,aAAa,CAAC;EAE3B,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC;IACjCoC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFpC,SAAS,CAAC,MAAM;IACdkC,QAAQ,CAAC;MACPC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnB,KAAK,EAAEE,WAAW,EAAEE,eAAe,EAAEI,gBAAgB,CAAC,CAAC;EAE3D,MAAMY,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,SAAS,CAAC,IAAI,CAAC;IACf,MAAMQ,IAAI,GAAG,IAAIC,WAAW,CAAC;MAC3BC,QAAQ,EAAEzB,KAAK;MACf0B,IAAI,EAAElC;IACR,CAAC,CAAC;IAEF+B,IAAI,CAACI,cAAc,CAAC;MAClBC,SAAS,EAAE,SAAAA,CAAUC,MAAM,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGF,MAAM,CAAC;QACrCd,SAAS,CAAC,KAAK,CAAC;MAClB,CAAC;MACDiB,SAAS,EAAE,SAAAA,CAAUC,GAAG,EAAE;QACxBH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAChBhB,QAAQ,CAAC;UACPC,OAAO,EAAE,IAAI;UACbC,OAAO,EAAEc,GAAG,CAACd,OAAO,IAAIe,IAAI,CAACC,SAAS,CAACF,GAAG;QAC5C,CAAC,CAAC;QACFlB,SAAS,CAAC,KAAK,CAAC;MAClB,CAAC;MACDqB,qBAAqB,EAAGC,IAAI,IAAK;QAC/BP,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEM,IAAI,CAAC;QAChC9B,eAAe,CAAC,IAAI,CAAC;QACrBQ,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EACD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACErB,OAAA,CAACP,MAAM;IAAAmD,QAAA,eACL5C,OAAA,CAACN,WAAW;MACVmD,OAAO,EAAE,iBAAkB;MAC3BC,UAAU,EAAC,6EAA6E;MACxFpB,QAAQ,EAAGC,CAAC,IAAKD,QAAQ,CAACC,CAAC,CAAE;MAAAiB,QAAA,gBAE7B5C,OAAA,CAACL,QAAQ;QACPoD,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,kBAAkB;QAC9BC,QAAQ;QACRJ,OAAO,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFrD,OAAA,CAACJ,MAAM;QACL0D,UAAU,EAAE,iBAAkB;QAC9BC,MAAM,EAAEA,CAAA,KAAM;UACZnB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAC3B;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFrD,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UAAGwD,SAAS,EAAC,YAAY;UAAAZ,QAAA,EAAC;QAAiC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/DrD,OAAA,CAACH,IAAI;UAAC4D,EAAE,EAAC,SAAS;UAAAb,QAAA,eAChB5C,OAAA;YAAGwD,SAAS,EAAC,iBAAiB;YAAAZ,QAAA,EAAC;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEb,CAAC;AAACnD,EAAA,CAhHID,cAAc;AAAAyD,EAAA,GAAdzD,cAAc;AAkHpB,eAAeA,cAAc;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}