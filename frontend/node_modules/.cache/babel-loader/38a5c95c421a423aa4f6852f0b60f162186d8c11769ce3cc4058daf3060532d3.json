{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/cognito_project/cognito_integration/src/components/authentication/Login.jsx\",\n  _s = $RefreshSig$();\nimport Layout from \"../layout\";\nimport { Link } from \"react-router-dom\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport ButtonSignup from \"../common/ButtonSignup\";\nimport SocialButton from \"./SocialButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    setUserDetails,\n    setToken,\n    setLogin,\n    setSignup,\n    setForgetPassword,\n    setToastMessage,\n    setConfirmUser,\n    confirmUser,\n    setUserid\n  } = useContext(Headercontext);\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordIcon, setPasswordIcon] = useState(true);\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\"\n  });\n  const [loader, setLoader] = useState(false);\n  const [confirmCode, setConfirmCode] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\"\n    });\n  }, [email, password, confirmCode]);\n  var AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\n  const userPool = new CognitoUserPool({\n    UserPoolId: \"ap-northeast-1_ub6BKbCOS\",\n    ClientId: \"40l4r3ri3b721utkclttqju4j8\"\n  });\n  const onSubmit = e => {\n    setLoader(true);\n    e.preventDefault();\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool\n    });\n    const authDetails = new AuthenticationDetails({\n      email: email,\n      Password: password\n    });\n    user.authenticateUser(authDetails, {\n      onSuccess: data => {\n        console.log(data);\n        let userData = {\n          username: data.idToken.payload.name,\n          userEmail: data.idToken.payload.email,\n          picture: createImageFromInitials(500, data.idToken.payload.name, getRandomColor()),\n          userId: data.accessToken.payload.client_id,\n          expTime: data.accessToken.payload.exp\n        };\n        setUserDetails(userData);\n        setToken(data.accessToken.jwtToken);\n        setUserid(data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_ID\", data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_details\", JSON.stringify(userData));\n        localStorage.setItem(\"token\", data.accessToken.jwtToken);\n        setLoader(false);\n        setLogin(false);\n        setToastMessage({\n          display: true,\n          message: \"Logged in successfully\"\n        });\n      },\n      onFailure: err => {\n        // toast(err.message || JSON.stringify(err));\n        if (err.message == \"User is not confirmed.\") {\n          const confirmUser = new CognitoUser({\n            Username: email,\n            Pool: userPool\n          });\n          confirmUser.resendConfirmationCode((err, result) => {\n            if (err) {\n              setError({\n                isError: true,\n                message: err.message || JSON.stringify(err)\n              });\n            } else {\n              setToastMessage({\n                display: true,\n                message: \"Confirmation code sent to email\"\n              });\n              setConfirmUser(true);\n              setLoader(false);\n            }\n          });\n        } else {\n          setLoader(false);\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err)\n          });\n        }\n      },\n      newPasswordRequired: data => {\n        // console.log(\"newPasswordRequired:\", data);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Innerlayout, {\n      heading: \"Sign In\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"socialbuttons\",\n        children: /*#__PURE__*/_jsxDEV(SocialButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\",\n        children: \"or login with email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        required: true,\n        heading: \"Email*\",\n        handlechange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"password\",\n        placeholder: \"******\",\n        required: true,\n        heading: \"Password*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        actiontype: \"Sign In\",\n        action: () => {\n          console.log(\"scdcscsdcs\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgotpassword\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgot-password\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"simpletext\",\n          children: [\"Dont't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"forgot-password\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"fnqIYHu6OVQfC7ultMEJ8DGwicQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Layout","Link","Innerlayout","Inputbox","Button","ButtonSignup","SocialButton","jsxDEV","_jsxDEV","Login","_s","setUserDetails","setToken","setLogin","setSignup","setForgetPassword","setToastMessage","setConfirmUser","confirmUser","setUserid","useContext","Headercontext","password","setPassword","useState","email","setEmail","passwordIcon","setPasswordIcon","error","setError","isError","message","loader","setLoader","confirmCode","setConfirmCode","comfirmLoader","setConfirmLoader","useEffect","AmazonCognitoIdentity","require","userPool","CognitoUserPool","UserPoolId","ClientId","onSubmit","e","preventDefault","user","CognitoUser","Username","Pool","UserPool","authDetails","AuthenticationDetails","Password","authenticateUser","onSuccess","data","console","log","userData","username","idToken","payload","name","userEmail","picture","createImageFromInitials","getRandomColor","userId","accessToken","client_id","expTime","exp","jwtToken","localStorage","setItem","JSON","stringify","display","onFailure","err","resendConfirmationCode","result","newPasswordRequired","children","heading","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","handlechange","target","value","actiontype","action","to","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/cognito_integration/src/components/authentication/Login.jsx"],"sourcesContent":["import Layout from \"../layout\";\nimport { Link } from \"react-router-dom\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport ButtonSignup from \"../common/ButtonSignup\";\nimport SocialButton from \"./SocialButton\";\nconst Login = () => {\n  const {\n    setUserDetails,\n    setToken,\n    setLogin,\n    setSignup,\n    setForgetPassword,\n    setToastMessage,\n    setConfirmUser,\n    confirmUser,\n    setUserid\n  } = useContext(Headercontext);\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordIcon, setPasswordIcon] = useState(true);\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\",\n  });\n  const [loader, setLoader] = useState(false);\n  const [confirmCode, setConfirmCode] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\",\n    });\n  }, [email, password,confirmCode]);\n\n  var AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\n  const userPool = new CognitoUserPool({\n    UserPoolId: \"ap-northeast-1_ub6BKbCOS\",\n    ClientId: \"40l4r3ri3b721utkclttqju4j8\",\n  });\n  const onSubmit = (e) => {\n    setLoader(true);\n    e.preventDefault();\n\n\n\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool,\n    });\n\n    const authDetails = new AuthenticationDetails({\n      email: email,\n      Password: password,\n    });\n\n    user.authenticateUser(authDetails, {\n      onSuccess: (data) => {\n        console.log(data);\n        let userData = {\n          username: data.idToken.payload.name,\n          userEmail: data.idToken.payload.email,\n          picture: createImageFromInitials(\n            500,\n            data.idToken.payload.name,\n            getRandomColor()\n          ),\n          userId: data.accessToken.payload.client_id,\n          expTime: data.accessToken.payload.exp,\n        };\n        setUserDetails(userData);\n        setToken(data.accessToken.jwtToken);\n        setUserid(data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_ID\", data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_details\", JSON.stringify(userData));\n        localStorage.setItem(\"token\", data.accessToken.jwtToken);\n        setLoader(false);\n        setLogin(false);\n        setToastMessage({\n          display: true,\n          message: \"Logged in successfully\",\n        });\n      },\n      onFailure: (err) => {\n        // toast(err.message || JSON.stringify(err));\n        if (err.message == \"User is not confirmed.\") {\n          const confirmUser = new CognitoUser({\n            Username: email,\n            Pool: userPool,\n          });\n          confirmUser.resendConfirmationCode((err, result) => {\n            if (err) {\n              setError({\n                isError: true,\n                message: err.message || JSON.stringify(err),\n              });\n            } else {\n              setToastMessage({\n                display: true,\n                message: \"Confirmation code sent to email\",\n              });\n              setConfirmUser(true);\n              setLoader(false);\n            }\n          });\n        } else {\n          setLoader(false);\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err),\n          });\n        }\n      },\n      newPasswordRequired: (data) => {\n        // console.log(\"newPasswordRequired:\", data);\n      },\n    });\n  };\n  return (\n    <Layout>\n      <Innerlayout heading={\"Sign In\"}>\n        <div className=\"socialbuttons\">\n          <SocialButton />\n        </div>\n        <div className=\"divider\">or login with email</div>\n\n        <Inputbox\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          required\n          heading=\"Email*\"\n          handlechange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <Inputbox\n          type=\"password\"\n          placeholder=\"******\"\n          required\n          heading=\"Password*\"\n        />\n        <Button\n          actiontype={\"Sign In\"}\n          action={() => {\n            console.log(\"scdcscsdcs\");\n          }}\n        />\n        <Link to=\"/forgotpassword\">\n          <p className=\"forgot-password\">Forgot Password?</p>\n        </Link>\n        <Link to=\"/signup\">\n          <p className=\"simpletext\">\n            Dont't have an account?{\" \"}\n            <span className=\"forgot-password\">Signup</span>\n          </p>\n        </Link>\n      </Innerlayout>\n    </Layout>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}