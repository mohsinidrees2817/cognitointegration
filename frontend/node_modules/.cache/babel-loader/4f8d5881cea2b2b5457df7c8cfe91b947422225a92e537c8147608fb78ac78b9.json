{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/cognito_project/cognito_integration/src/components/authentication/SetPassword.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Headercontext } from \"../Headerdata/HeaderData\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetPassword = () => {\n  const onSubmit = e => {\n    /*#__PURE__*/_jsxDEV(\"e\", {\n      className: \"preventdefault\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n    if (confirmPassword == newPassword) {\n      user.confirmPassword(verificationCode, newPassword, {\n        onSuccess: data => {\n          setLoader(false);\n          console.log(\"onSuccess:\", data);\n          setToastMessage({\n            display: true,\n            message: \"password updated succesfully\"\n          });\n          setLogin(true);\n          setForgetPassword(false);\n        },\n        onFailure: err => {\n          setLoader(false);\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err)\n          });\n        }\n      });\n    } else {\n      setLoader(false);\n      setError({\n        isError: true,\n        message: \"Password and confirmed password are diffferent\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Innerlayout, {\n      heading: \"Set Password\",\n      onSubmit: e => {\n        onSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"password\",\n        placeholder: \"********\",\n        required: true,\n        heading: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"password\",\n        placeholder: \"********\",\n        required: true,\n        heading: \"Repeat Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        actiontype: \"Set Password\",\n        action: () => {\n          console.log(\"scdcscsdcs\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = SetPassword;\nexport default SetPassword;\nvar _c;\n$RefreshReg$(_c, \"SetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Headercontext","ToastContainer","Layout","Innerlayout","Inputbox","Button","Link","jsxDEV","_jsxDEV","SetPassword","onSubmit","e","className","fileName","_jsxFileName","lineNumber","columnNumber","confirmPassword","newPassword","user","verificationCode","onSuccess","data","setLoader","console","log","setToastMessage","display","message","setLogin","setForgetPassword","onFailure","err","setError","isError","JSON","stringify","children","heading","type","placeholder","required","actiontype","action","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/cognito_integration/src/components/authentication/SetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Headercontext } from \"../Headerdata/HeaderData\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst SetPassword = () => {\n  const onSubmit = (e) => {\n    <e className=\"preventdefault\"></e>\n    if (confirmPassword == newPassword) {\n      user.confirmPassword(verificationCode, newPassword, {\n        onSuccess: (data) => {\n          setLoader(false);\n          console.log(\"onSuccess:\", data);\n          setToastMessage({\n            display: true,\n            message: \"password updated succesfully\",\n          });\n          setLogin(true);\n          setForgetPassword(false);\n        },\n        onFailure: (err) => {\n          setLoader(false);\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err),\n          });\n        },\n      });\n    } else {\n      setLoader(false);\n      setError({\n        isError: true,\n        message: \"Password and confirmed password are diffferent\",\n      });\n    }\n  };\n\n  return (\n    <Layout>\n      <Innerlayout heading={\"Set Password\"} onSubmit={(e)=>{onSubmit(e)}}>\n        <Inputbox\n          type=\"password\"\n          placeholder=\"********\"\n          required\n          heading=\"Password\"\n        />\n        <Inputbox\n          type=\"password\"\n          placeholder=\"********\"\n          required\n          heading=\"Repeat Password\"\n        />\n        <Button\n          actiontype={\"Set Password\"}\n          action={() => {\n            console.log(\"scdcscsdcs\");\n          }}\n        />\n      </Innerlayout>\n    </Layout>\n  );\n};\n\nexport default SetPassword;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAC9C,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACtB,aAAAH,OAAA;MAAGI,SAAS,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;IAClC,IAAIC,eAAe,IAAIC,WAAW,EAAE;MAClCC,IAAI,CAACF,eAAe,CAACG,gBAAgB,EAAEF,WAAW,EAAE;QAClDG,SAAS,EAAGC,IAAI,IAAK;UACnBC,SAAS,CAAC,KAAK,CAAC;UAChBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,IAAI,CAAC;UAC/BI,eAAe,CAAC;YACdC,OAAO,EAAE,IAAI;YACbC,OAAO,EAAE;UACX,CAAC,CAAC;UACFC,QAAQ,CAAC,IAAI,CAAC;UACdC,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC;QACDC,SAAS,EAAGC,GAAG,IAAK;UAClBT,SAAS,CAAC,KAAK,CAAC;UAChBU,QAAQ,CAAC;YACPC,OAAO,EAAE,IAAI;YACbN,OAAO,EAAEI,GAAG,CAACJ,OAAO,IAAIO,IAAI,CAACC,SAAS,CAACJ,GAAG;UAC5C,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLT,SAAS,CAAC,KAAK,CAAC;MAChBU,QAAQ,CAAC;QACPC,OAAO,EAAE,IAAI;QACbN,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEpB,OAAA,CAACN,MAAM;IAAAmC,QAAA,eACL7B,OAAA,CAACL,WAAW;MAACmC,OAAO,EAAE,cAAe;MAAC5B,QAAQ,EAAGC,CAAC,IAAG;QAACD,QAAQ,CAACC,CAAC,CAAC;MAAA,CAAE;MAAA0B,QAAA,gBACjE7B,OAAA,CAACJ,QAAQ;QACPmC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,QAAQ;QACRH,OAAO,EAAC;MAAU;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACFR,OAAA,CAACJ,QAAQ;QACPmC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,QAAQ;QACRH,OAAO,EAAC;MAAiB;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFR,OAAA,CAACH,MAAM;QACLqC,UAAU,EAAE,cAAe;QAC3BC,MAAM,EAAEA,CAAA,KAAM;UACZnB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAC3B;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEb,CAAC;AAAC4B,EAAA,GAxDInC,WAAW;AA0DjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}