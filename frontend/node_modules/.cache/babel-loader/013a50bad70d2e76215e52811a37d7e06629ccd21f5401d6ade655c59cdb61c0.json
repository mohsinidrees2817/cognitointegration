{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport CognitoTokenScopes from './CognitoTokenScopes';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\n\n/** @class */\n\nvar CognitoAuthSession = function () {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @param {array}  TokenScopes  The session's token scopes.\n    * @param {string} State The session's state. \n   */\n  function CognitoAuthSession() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      IdToken = _ref.IdToken,\n      RefreshToken = _ref.RefreshToken,\n      AccessToken = _ref.AccessToken,\n      TokenScopes = _ref.TokenScopes,\n      State = _ref.State;\n    _classCallCheck(this, CognitoAuthSession);\n    if (IdToken) {\n      this.idToken = IdToken;\n    } else {\n      this.idToken = new CognitoIdToken();\n    }\n    if (RefreshToken) {\n      this.refreshToken = RefreshToken;\n    } else {\n      this.refreshToken = new CognitoRefreshToken();\n    }\n    if (AccessToken) {\n      this.accessToken = AccessToken;\n    } else {\n      this.accessToken = new CognitoAccessToken();\n    }\n    if (TokenScopes) {\n      this.tokenScopes = TokenScopes;\n    } else {\n      this.tokenScopes = new CognitoTokenScopes();\n    }\n    if (State) {\n      this.state = State;\n    } else {\n      this.state = null;\n    }\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n\n  CognitoAuthSession.prototype.getIdToken = function getIdToken() {\n    return this.idToken;\n  };\n\n  /**\n   * Set a new Id token\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @returns {void}\n   */\n\n  CognitoAuthSession.prototype.setIdToken = function setIdToken(IdToken) {\n    this.idToken = IdToken;\n  };\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n\n  CognitoAuthSession.prototype.getRefreshToken = function getRefreshToken() {\n    return this.refreshToken;\n  };\n\n  /**\n   * Set a new Refresh token\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n   * @returns {void}\n   */\n\n  CognitoAuthSession.prototype.setRefreshToken = function setRefreshToken(RefreshToken) {\n    this.refreshToken = RefreshToken;\n  };\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n\n  CognitoAuthSession.prototype.getAccessToken = function getAccessToken() {\n    return this.accessToken;\n  };\n\n  /**\n   * Set a new Access token\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @returns {void}\n   */\n\n  CognitoAuthSession.prototype.setAccessToken = function setAccessToken(AccessToken) {\n    this.accessToken = AccessToken;\n  };\n\n  /**\n   * @returns {CognitoTokenScopes} the session's token scopes\n   */\n\n  CognitoAuthSession.prototype.getTokenScopes = function getTokenScopes() {\n    return this.tokenScopes;\n  };\n\n  /**\n   * Set new token scopes\n   * @param {array}  tokenScopes  The session's token scopes.\n   * @returns {void}\n   */\n\n  CognitoAuthSession.prototype.setTokenScopes = function setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  };\n\n  /**\n   * @returns {string} the session's state\n   */\n\n  CognitoAuthSession.prototype.getState = function getState() {\n    return this.state;\n  };\n\n  /**\n   * Set new state\n   * @param {string}  state  The session's state.\n   * @returns {void}\n   */\n\n  CognitoAuthSession.prototype.setState = function setState(State) {\n    this.state = State;\n  };\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in Access and Id Tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n\n  CognitoAuthSession.prototype.isValid = function isValid() {\n    var now = Math.floor(new Date() / 1000);\n    try {\n      if (this.accessToken != null) {\n        return now < this.accessToken.getExpiration();\n      }\n      if (this.idToken != null) {\n        return now < this.idToken.getExpiration();\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  };\n  return CognitoAuthSession;\n}();\nexport default CognitoAuthSession;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","CognitoTokenScopes","CognitoAccessToken","CognitoIdToken","CognitoRefreshToken","CognitoAuthSession","_ref","arguments","length","undefined","IdToken","RefreshToken","AccessToken","TokenScopes","State","idToken","refreshToken","accessToken","tokenScopes","state","prototype","getIdToken","setIdToken","getRefreshToken","setRefreshToken","getAccessToken","setAccessToken","getTokenScopes","setTokenScopes","getState","setState","isValid","now","Math","floor","Date","getExpiration","e"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/frontend/node_modules/amazon-cognito-auth-js/es/CognitoAuthSession.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport CognitoTokenScopes from './CognitoTokenScopes';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\n\n/** @class */\n\nvar CognitoAuthSession = function () {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @param {array}  TokenScopes  The session's token scopes.\n    * @param {string} State The session's state. \n   */\n  function CognitoAuthSession() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        IdToken = _ref.IdToken,\n        RefreshToken = _ref.RefreshToken,\n        AccessToken = _ref.AccessToken,\n        TokenScopes = _ref.TokenScopes,\n        State = _ref.State;\n\n    _classCallCheck(this, CognitoAuthSession);\n\n    if (IdToken) {\n      this.idToken = IdToken;\n    } else {\n      this.idToken = new CognitoIdToken();\n    }\n    if (RefreshToken) {\n      this.refreshToken = RefreshToken;\n    } else {\n      this.refreshToken = new CognitoRefreshToken();\n    }\n    if (AccessToken) {\n      this.accessToken = AccessToken;\n    } else {\n      this.accessToken = new CognitoAccessToken();\n    }\n    if (TokenScopes) {\n      this.tokenScopes = TokenScopes;\n    } else {\n      this.tokenScopes = new CognitoTokenScopes();\n    }\n    if (State) {\n      this.state = State;\n    } else {\n      this.state = null;\n    }\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n\n\n  CognitoAuthSession.prototype.getIdToken = function getIdToken() {\n    return this.idToken;\n  };\n\n  /**\n   * Set a new Id token\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @returns {void}\n   */\n\n\n  CognitoAuthSession.prototype.setIdToken = function setIdToken(IdToken) {\n    this.idToken = IdToken;\n  };\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n\n\n  CognitoAuthSession.prototype.getRefreshToken = function getRefreshToken() {\n    return this.refreshToken;\n  };\n\n  /**\n   * Set a new Refresh token\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n   * @returns {void}\n   */\n\n\n  CognitoAuthSession.prototype.setRefreshToken = function setRefreshToken(RefreshToken) {\n    this.refreshToken = RefreshToken;\n  };\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n\n\n  CognitoAuthSession.prototype.getAccessToken = function getAccessToken() {\n    return this.accessToken;\n  };\n\n  /**\n   * Set a new Access token\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @returns {void}\n   */\n\n\n  CognitoAuthSession.prototype.setAccessToken = function setAccessToken(AccessToken) {\n    this.accessToken = AccessToken;\n  };\n\n  /**\n   * @returns {CognitoTokenScopes} the session's token scopes\n   */\n\n\n  CognitoAuthSession.prototype.getTokenScopes = function getTokenScopes() {\n    return this.tokenScopes;\n  };\n\n  /**\n   * Set new token scopes\n   * @param {array}  tokenScopes  The session's token scopes.\n   * @returns {void}\n   */\n\n\n  CognitoAuthSession.prototype.setTokenScopes = function setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  };\n\n  /**\n   * @returns {string} the session's state\n   */\n\n\n  CognitoAuthSession.prototype.getState = function getState() {\n    return this.state;\n  };\n\n  /**\n   * Set new state\n   * @param {string}  state  The session's state.\n   * @returns {void}\n   */\n\n\n  CognitoAuthSession.prototype.setState = function setState(State) {\n    this.state = State;\n  };\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in Access and Id Tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n\n\n  CognitoAuthSession.prototype.isValid = function isValid() {\n    var now = Math.floor(new Date() / 1000);\n    try {\n      if (this.accessToken != null) {\n        return now < this.accessToken.getExpiration();\n      }\n      if (this.idToken != null) {\n        return now < this.idToken.getExpiration();\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  return CognitoAuthSession;\n}();\n\nexport default CognitoAuthSession;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}