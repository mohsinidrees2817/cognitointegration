{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/Maincontext/HeaderData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CognitoAuth } from \"amazon-cognito-auth-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Headercontext = /*#__PURE__*/createContext();\nconst HeaderData = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [userID, setUserid] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n\n  // states for displaying popups\n  const [forgetPassword, setForgetPassword] = useState(false);\n  const [confirmUser, setConfirmUser] = useState(false);\n\n  // react toast notification\n  const [toastmessage, setToastMessage] = useState({\n    display: false,\n    message: \"\"\n  });\n\n  // loader for social icons\n  const [googleLoader, setGoogleloader] = useState(false);\n  const [facebookLoader, setFacebookloader] = useState(false);\n  const [token, setToken] = useState(null);\n  const [userDetails, setUserDetails] = useState({});\n\n  // make a request to the server and include the authorization header\n  const verifyJwtFromserver = async jwttoken => {\n    const API_URL = \"http://localhost:4000\";\n    try {\n      const response = await axios.get(`${API_URL}/verify`, {\n        headers: {\n          Authorization: `Bearer ${jwttoken}`\n        }\n      });\n      console.log(response.data);\n      return true;\n    } catch (error) {\n      const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(\"error!\", message);\n      return false;\n    }\n  };\n\n  // function to check is user logged in or not\n  const IsloggedIn = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // verifying token on each login that is there is valid token in local storage or not\n      const response = await verifyJwtFromserver(token);\n      if (response) {\n        console.log(response, \"response\");\n        const userDetails = JSON.parse(localStorage.getItem(\"user_details\"));\n        const ID = localStorage.getItem(\"user_ID\");\n        token && setToken(token);\n        userDetails && setUserDetails(userDetails);\n        ID && setUserid(ID);\n        console.log(\"User already logged in\");\n      } else {\n        console.log(\"user have invalid/expired token token\");\n        alert(\"Invalid token in local storage\");\n        localStorage.clear();\n        navigate(\"/signin\");\n      }\n    } else {\n      console.log(\"user not logged in\");\n    }\n  };\n  useEffect(() => {\n    IsloggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Headercontext.Provider, {\n    value: {\n      token,\n      setToken,\n      userDetails,\n      setUserDetails,\n      forgetPassword,\n      setForgetPassword,\n      toastmessage,\n      setToastMessage,\n      googleLoader,\n      setGoogleloader,\n      facebookLoader,\n      setFacebookloader,\n      confirmUser,\n      setConfirmUser,\n      userID,\n      setUserid,\n      verifyJwtFromserver,\n      setConfirmLoader,\n      comfirmLoader,\n      verifyJwtFromserver\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderData, \"AuVsGIJvM6axPEUomIv27rXm1a0=\", false, function () {\n  return [useNavigate];\n});\n_c = HeaderData;\nexport default HeaderData;\nvar _c;\n$RefreshReg$(_c, \"HeaderData\");","map":{"version":3,"names":["React","useContext","useState","useEffect","createContext","useNavigate","CognitoAuth","axios","jsxDEV","_jsxDEV","Headercontext","HeaderData","_ref","_s","children","navigate","userID","setUserid","comfirmLoader","setConfirmLoader","forgetPassword","setForgetPassword","confirmUser","setConfirmUser","toastmessage","setToastMessage","display","message","googleLoader","setGoogleloader","facebookLoader","setFacebookloader","token","setToken","userDetails","setUserDetails","verifyJwtFromserver","jwttoken","API_URL","response","get","headers","Authorization","console","log","data","error","toString","IsloggedIn","localStorage","getItem","JSON","parse","ID","alert","clear","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/Maincontext/HeaderData.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CognitoAuth } from \"amazon-cognito-auth-js\";\nimport axios from \"axios\";\n\nexport const Headercontext = createContext();\n\nconst HeaderData = ({ children }) => {\n  const navigate = useNavigate();\n  const [userID, setUserid] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n\n  // states for displaying popups\n  const [forgetPassword, setForgetPassword] = useState(false);\n  const [confirmUser, setConfirmUser] = useState(false);\n\n  // react toast notification\n  const [toastmessage, setToastMessage] = useState({\n    display: false,\n    message: \"\",\n  });\n\n  // loader for social icons\n  const [googleLoader, setGoogleloader] = useState(false);\n  const [facebookLoader, setFacebookloader] = useState(false);\n\n  const [token, setToken] = useState(null);\n  const [userDetails, setUserDetails] = useState({});\n\n  // make a request to the server and include the authorization header\n  const verifyJwtFromserver = async (jwttoken) => {\n    const API_URL = \"http://localhost:4000\";\n    try {\n      const response = await axios.get(`${API_URL}/verify`, {\n        headers: {\n          Authorization: `Bearer ${jwttoken}`,\n        },\n      });\n      console.log(response.data);\n      return true;\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      console.log(\"error!\", message);\n      return false;\n    }\n  };\n\n  // function to check is user logged in or not\n  const IsloggedIn = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // verifying token on each login that is there is valid token in local storage or not\n      const response = await verifyJwtFromserver(token);\n      if (response) {\n        console.log(response, \"response\");\n        const userDetails = JSON.parse(localStorage.getItem(\"user_details\"));\n        const ID = localStorage.getItem(\"user_ID\");\n        token && setToken(token);\n        userDetails && setUserDetails(userDetails);\n        ID && setUserid(ID);\n        console.log(\"User already logged in\");\n      } else {\n        console.log(\"user have invalid/expired token token\");\n        alert(\"Invalid token in local storage\");\n        localStorage.clear();\n        navigate(\"/signin\");\n      }\n    } else {\n      console.log(\"user not logged in\");\n    }\n  };\n\n  useEffect(() => {\n    IsloggedIn();\n  }, []);\n\n  return (\n    <Headercontext.Provider\n      value={{\n        token,\n        setToken,\n        userDetails,\n        setUserDetails,\n\n        forgetPassword,\n        setForgetPassword,\n        toastmessage,\n        setToastMessage,\n        googleLoader,\n        setGoogleloader,\n        facebookLoader,\n        setFacebookloader,\n        confirmUser,\n        setConfirmUser,\n        userID,\n        setUserid,\n        verifyJwtFromserver,\n        setConfirmLoader,\n        comfirmLoader,\n        verifyJwtFromserver,\n      }}\n    >\n      {children}\n    </Headercontext.Provider>\n  );\n};\n\nexport default HeaderData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}