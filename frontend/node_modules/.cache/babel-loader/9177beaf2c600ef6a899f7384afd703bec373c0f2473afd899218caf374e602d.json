{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/Maincontext/HeaderData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Headercontext = /*#__PURE__*/createContext();\nconst HeaderData = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [userID, setUserid] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n\n  // states for displaying popups\n  const [forgetPassword, setForgetPassword] = useState(false);\n  const [confirmUser, setConfirmUser] = useState(false);\n\n  // react toast notification\n  const [toastmessage, setToastMessage] = useState({\n    display: false,\n    message: \"\"\n  });\n\n  // loader for social icons\n  const [googleLoader, setGoogleloader] = useState(false);\n  const [facebookLoader, setFacebookloader] = useState(false);\n  const [token, setToken] = useState(null);\n  const [userDetails, setUserDetails] = useState({});\n\n  // make a request to the server and include the authorization header\n  const verifyJwtFromserver = async jwttoken => {\n    console.log(\"i runn\");\n    const API_URL = \"http://localhost:4000\";\n    try {\n      const response = await axios.get(`${API_URL}/verify`, {\n        headers: {\n          Authorization: `Bearer ${jwttoken}`\n        }\n      });\n      console.log(response.data);\n      return true;\n    } catch (error) {\n      const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(\"error!\", message);\n    }\n  };\n\n  // function to parse token which we recieve in url during social login.\n  async function parseJwt() {\n    var authData = {\n      UserPoolId: \"ap-northeast-1_ZpGAnFl7V\",\n      ClientId: \"7c3np67ouk443m5mmer7ajmi2\",\n      RedirectUriSignIn: \"https://cognito-integration.vercel.app/\",\n      RedirectUriSignOut: \"https://cognito-integration.vercel.app/\",\n      AppWebDomain: \"integration2.auth.ap-northeast-1.amazoncognito.com\",\n      TokenScopesArray: [\"email\"]\n    };\n    var auth = new CognitoAuth(authData);\n    auth.userhandler = {\n      onSuccess: async function (result) {\n        let token = result.idToken.jwtToken;\n        var base64Url = token.split(\".\")[1];\n        var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        var jsonPayload = decodeURIComponent(window.atob(base64).split(\"\").map(function (c) {\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(\"\"));\n        const response = await verifyJwtFromserver(result.accessToken.jwtToken);\n        if (response) {\n          let userdata = JSON.parse(jsonPayload);\n          let userData = {\n            username: userdata === null || userdata === void 0 ? void 0 : userdata.name,\n            userEmail: userdata === null || userdata === void 0 ? void 0 : userdata.email,\n            picture: (userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].providerName) == \"Facebook\" ? `https://graph.facebook.com/me/picture?access_token=${userdata.picture}` : userdata.picture,\n            userId: userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].userId,\n            expTime: userdata === null || userdata === void 0 ? void 0 : userdata.exp,\n            provider: userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].providerName\n          };\n          let user_ID = userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].userId;\n          setUserDetails(userData);\n          localStorage.setItem(\"user_details\", JSON.stringify(userData));\n          setToken(result.accessToken.jwtToken);\n          localStorage.setItem(\"token\", result.accessToken.jwtToken);\n          setUserid(user_ID);\n          localStorage.setItem(\"user_ID\", user_ID);\n          navigate(\"/\");\n        } else {\n          console.log(\"invalid jwt token\");\n          alert(\"fail to login try again later\");\n          navigate(\"/\");\n        }\n      },\n      onFailure: function (err) {\n        console.log(err, \"errrr\");\n      }\n    };\n    var curUrl = window.location.href;\n    auth.parseCognitoWebResponse(curUrl);\n  }\n\n  // function to check is user logged in or not\n  const IsloggedIn = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // verifying token on each login that is there is valid token in local storage or not\n      const response = await verifyJwtFromserver(token);\n      if (response) {\n        console.log(response, \"response\");\n        const userDetails = JSON.parse(localStorage.getItem(\"user_details\"));\n        const ID = localStorage.getItem(\"user_ID\");\n        token && setToken(token);\n        userDetails && setUserDetails(userDetails);\n        ID && setUserid(ID);\n        console.log(\"User already logged in\");\n      } else {\n        console.log(\"user have invalid/expired token token\");\n        alert(\"Invalid token in local storage\");\n        localStorage.clear();\n        navigate(\"/signin\");\n      }\n    } else {\n      const url = window.location;\n      const href = url.href;\n      const strs = href.split(\"#access_token=\");\n      const access_token = strs.at(1);\n      if (access_token !== undefined) {\n        parseJwt(access_token);\n        console.log(\"recieved token in url user just logged in\");\n      } else {\n        console.log(\"user not logged in\");\n      }\n    }\n  };\n  useEffect(() => {\n    IsloggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Headercontext.Provider, {\n    value: {\n      token,\n      setToken,\n      userDetails,\n      setUserDetails,\n      forgetPassword,\n      setForgetPassword,\n      toastmessage,\n      setToastMessage,\n      googleLoader,\n      setGoogleloader,\n      facebookLoader,\n      setFacebookloader,\n      confirmUser,\n      setConfirmUser,\n      userID,\n      setUserid,\n      verifyJwtFromserver,\n      setConfirmLoader,\n      comfirmLoader\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderData, \"AuVsGIJvM6axPEUomIv27rXm1a0=\", false, function () {\n  return [useNavigate];\n});\n_c = HeaderData;\nexport default HeaderData;\nvar _c;\n$RefreshReg$(_c, \"HeaderData\");","map":{"version":3,"names":["React","useContext","useState","useEffect","createContext","useNavigate","axios","jsxDEV","_jsxDEV","Headercontext","HeaderData","_ref","_s","children","navigate","userID","setUserid","comfirmLoader","setConfirmLoader","forgetPassword","setForgetPassword","confirmUser","setConfirmUser","toastmessage","setToastMessage","display","message","googleLoader","setGoogleloader","facebookLoader","setFacebookloader","token","setToken","userDetails","setUserDetails","verifyJwtFromserver","jwttoken","console","log","API_URL","response","get","headers","Authorization","data","error","toString","parseJwt","authData","UserPoolId","ClientId","RedirectUriSignIn","RedirectUriSignOut","AppWebDomain","TokenScopesArray","auth","CognitoAuth","userhandler","onSuccess","result","idToken","jwtToken","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","slice","join","accessToken","userdata","JSON","parse","userData","username","name","userEmail","email","picture","identities","providerName","userId","expTime","exp","provider","user_ID","localStorage","setItem","stringify","alert","onFailure","err","curUrl","location","href","parseCognitoWebResponse","IsloggedIn","getItem","ID","clear","url","strs","access_token","at","undefined","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/Maincontext/HeaderData.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const Headercontext = createContext();\n\nconst HeaderData = ({ children }) => {\n  const navigate = useNavigate();\n  const [userID, setUserid] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n\n  // states for displaying popups\n  const [forgetPassword, setForgetPassword] = useState(false);\n  const [confirmUser, setConfirmUser] = useState(false);\n\n  // react toast notification\n  const [toastmessage, setToastMessage] = useState({\n    display: false,\n    message: \"\",\n  });\n\n  // loader for social icons\n  const [googleLoader, setGoogleloader] = useState(false);\n  const [facebookLoader, setFacebookloader] = useState(false);\n\n  const [token, setToken] = useState(null);\n  const [userDetails, setUserDetails] = useState({});\n\n  // make a request to the server and include the authorization header\n  const verifyJwtFromserver = async (jwttoken) => {\n    console.log(\"i runn\");\n    const API_URL = \"http://localhost:4000\";\n\n    try {\n      const response = await axios.get(`${API_URL}/verify`, {\n        headers: {\n          Authorization: `Bearer ${jwttoken}`,\n        },\n      });\n      console.log(response.data);\n      return true;\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      console.log(\"error!\", message);\n    }\n  };\n\n  // function to parse token which we recieve in url during social login.\n  async function parseJwt() {\n    var authData = {\n      UserPoolId: \"ap-northeast-1_ZpGAnFl7V\",\n      ClientId: \"7c3np67ouk443m5mmer7ajmi2\",\n      RedirectUriSignIn: \"https://cognito-integration.vercel.app/\",\n      RedirectUriSignOut: \"https://cognito-integration.vercel.app/\",\n      AppWebDomain: \"integration2.auth.ap-northeast-1.amazoncognito.com\",\n      TokenScopesArray: [\"email\"],\n    };\n    var auth = new CognitoAuth(authData);\n    auth.userhandler = {\n      onSuccess: async function (result) {\n        let token = result.idToken.jwtToken;\n        var base64Url = token.split(\".\")[1];\n        var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        var jsonPayload = decodeURIComponent(\n          window\n            .atob(base64)\n            .split(\"\")\n            .map(function (c) {\n              return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(\"\")\n        );\n        const response = await verifyJwtFromserver(result.accessToken.jwtToken);\n        if (response) {\n          let userdata = JSON.parse(jsonPayload);\n          let userData = {\n            username: userdata?.name,\n            userEmail: userdata?.email,\n            picture:\n              userdata?.identities[0].providerName == \"Facebook\"\n                ? `https://graph.facebook.com/me/picture?access_token=${userdata.picture}`\n                : userdata.picture,\n            userId: userdata?.identities[0].userId,\n            expTime: userdata?.exp,\n            provider: userdata?.identities[0].providerName,\n          };\n          let user_ID = userdata?.identities[0].userId;\n          setUserDetails(userData);\n          localStorage.setItem(\"user_details\", JSON.stringify(userData));\n          setToken(result.accessToken.jwtToken);\n          localStorage.setItem(\"token\", result.accessToken.jwtToken);\n          setUserid(user_ID);\n          localStorage.setItem(\"user_ID\", user_ID);\n          navigate(\"/\");\n        } else {\n          console.log(\"invalid jwt token\");\n          alert(\"fail to login try again later\");\n          navigate(\"/\");\n        }\n      },\n      onFailure: function (err) {\n        console.log(err, \"errrr\");\n      },\n    };\n    var curUrl = window.location.href;\n    auth.parseCognitoWebResponse(curUrl);\n  }\n\n  // function to check is user logged in or not\n  const IsloggedIn = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // verifying token on each login that is there is valid token in local storage or not\n      const response = await verifyJwtFromserver(token);\n      if (response) {\n        console.log(response, \"response\");\n        const userDetails = JSON.parse(localStorage.getItem(\"user_details\"));\n        const ID = localStorage.getItem(\"user_ID\");\n        token && setToken(token);\n        userDetails && setUserDetails(userDetails);\n        ID && setUserid(ID);\n        console.log(\"User already logged in\");\n      } else {\n        console.log(\"user have invalid/expired token token\");\n        alert(\"Invalid token in local storage\");\n        localStorage.clear();\n        navigate(\"/signin\");\n      }\n    } else {\n      const url = window.location;\n      const href = url.href;\n      const strs = href.split(\"#access_token=\");\n      const access_token = strs.at(1);\n      if (access_token !== undefined) {\n        parseJwt(access_token);\n        console.log(\"recieved token in url user just logged in\");\n      } else {\n        console.log(\"user not logged in\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    IsloggedIn();\n  }, []);\n\n  return (\n    <Headercontext.Provider\n      value={{\n        token,\n        setToken,\n        userDetails,\n        setUserDetails,\n\n        forgetPassword,\n        setForgetPassword,\n        toastmessage,\n        setToastMessage,\n        googleLoader,\n        setGoogleloader,\n        facebookLoader,\n        setFacebookloader,\n        confirmUser,\n        setConfirmUser,\n        userID,\n        setUserid,\n        verifyJwtFromserver,\n        setConfirmLoader,\n        comfirmLoader,\n      }}\n    >\n      {children}\n    </Headercontext.Provider>\n  );\n};\n\nexport default HeaderData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}