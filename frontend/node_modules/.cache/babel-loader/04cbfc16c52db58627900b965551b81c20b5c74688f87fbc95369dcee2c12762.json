{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { CognitoUser, AuthenticationDetails, CognitoUserPool, CognitoUserAttribute } from \"amazon-cognito-identity-js\";\nimport { Link, Navigate, redirect, useNavigate } from \"react-router-dom\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport UserPool from \"./UserPool\";\nimport { Headercontext } from \"../Headerdata/HeaderData\";\nimport { createImageFromInitials } from \"../ImageCreation/createImage\";\nimport { getRandomColor } from \"../ImageCreation/getrandomcolor\";\nimport SocialButton from \"./SocialButton\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Error from \"../common/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    setUserDetails,\n    setToken,\n    setLogin,\n    setToastMessage,\n    setConfirmUser,\n    confirmUser,\n    setUserid,\n    verifyJwtFromserver\n  } = useContext(Headercontext);\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordIcon, setPasswordIcon] = useState(true);\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\"\n  });\n  const [loader, setLoader] = useState(false);\n  const [confirmCode, setConfirmCode] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\"\n    });\n  }, [email, password, confirmCode]);\n  var AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\n  const userPool = new CognitoUserPool({\n    UserPoolId: \"ap-northeast-1_ub6BKbCOS\",\n    ClientId: \"40l4r3ri3b721utkclttqju4j8\"\n  });\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoader(true);\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool\n    });\n    const authDetails = new AuthenticationDetails({\n      email: email,\n      Password: password\n    });\n    user.authenticateUser(authDetails, {\n      onSuccess: data => {\n        console.log(data);\n        let userData = {\n          username: data.idToken.payload.name,\n          userEmail: data.idToken.payload.email,\n          picture: createImageFromInitials(500, data.idToken.payload.name, getRandomColor()),\n          userId: data.accessToken.payload.client_id,\n          expTime: data.accessToken.payload.exp,\n          alldata: data\n        };\n        verifyJwtFromserver();\n        setUserDetails(userData);\n        setToken(data.accessToken.jwtToken);\n        setUserid(data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_ID\", data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_details\", JSON.stringify(userData));\n        localStorage.setItem(\"token\", data.accessToken.jwtToken);\n        setLoader(false);\n        setLogin(false);\n        setToastMessage({\n          display: true,\n          message: \"Logged in successfully\"\n        });\n        navigate(\"/\");\n      },\n      onFailure: err => {\n        // toast(err.message || JSON.stringify(err));\n        if (err.message == \"User is not confirmed.\") {\n          const confirmUser = new CognitoUser({\n            Username: email,\n            Pool: userPool\n          });\n          confirmUser.resendConfirmationCode((err, result) => {\n            if (err) {\n              setError({\n                isError: true,\n                message: err.message || JSON.stringify(err)\n              });\n            } else {\n              setToastMessage({\n                display: true,\n                message: \"Confirmation code sent to email\"\n              });\n              setConfirmUser(true);\n              setLoader(false);\n              // navigate(\"/verify\");\n            }\n          });\n        } else {\n          setLoader(false);\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err)\n          });\n        }\n      },\n      newPasswordRequired: data => {\n        // console.log(\"newPasswordRequired:\", data);\n      }\n    });\n  };\n  const ConfirmUser = e => {\n    e.preventDefault();\n    setConfirmLoader(true);\n    let userData = {\n      Username: email,\n      Pool: userPool\n    };\n    let cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n    cognitoUser.confirmRegistration(confirmCode, true, function (err) {\n      if (err) {\n        setConfirmLoader(false);\n        setError({\n          isError: true,\n          message: err.message || JSON.stringify(err)\n        });\n        return;\n      }\n      setToastMessage({\n        display: true,\n        message: \"Confirmed Succesfully\"\n      });\n      setConfirmLoader(false);\n      onSubmit(e);\n      setConfirmUser(false);\n      navigate(\"/\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !confirmUser ? /*#__PURE__*/_jsxDEV(Innerlayout, {\n      heading: \"Sign In\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"socialbuttons\",\n        children: /*#__PURE__*/_jsxDEV(SocialButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\",\n        children: \"or login with email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        required: true,\n        heading: \"Email*\",\n        handlechange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"password\",\n        placeholder: \"******\",\n        required: true,\n        heading: \"Password*\",\n        handlechange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), error.isError && /*#__PURE__*/_jsxDEV(Error, {\n        errormessage: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        actiontype: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgotpassword\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgot-password\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"simpletext\",\n          children: [\"Dont't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"forgot-password\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Innerlayout, {\n      heading: \"Verify Email\",\n      subheading: \"Enter verification code sent to your email to verify.\",\n      onSubmit: e => ConfirmUser(e),\n      children: [/*#__PURE__*/_jsxDEV(Inputbox, {\n        type: \"text\",\n        placeholder: \"000000\",\n        required: true,\n        handlechange: e => {\n          setConfirmCode(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        actiontype: \"verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"zlGNi/TVuDvQBm3SxzaDyeTN4eQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useContext","CognitoUser","AuthenticationDetails","CognitoUserPool","CognitoUserAttribute","Link","Navigate","redirect","useNavigate","Layout","Innerlayout","Inputbox","Button","UserPool","Headercontext","createImageFromInitials","getRandomColor","SocialButton","ToastContainer","toast","Error","jsxDEV","_jsxDEV","Login","_s","setUserDetails","setToken","setLogin","setToastMessage","setConfirmUser","confirmUser","setUserid","verifyJwtFromserver","navigate","password","setPassword","email","setEmail","passwordIcon","setPasswordIcon","error","setError","isError","message","loader","setLoader","confirmCode","setConfirmCode","comfirmLoader","setConfirmLoader","AmazonCognitoIdentity","require","userPool","UserPoolId","ClientId","onSubmit","e","preventDefault","user","Username","Pool","authDetails","Password","authenticateUser","onSuccess","data","console","log","userData","username","idToken","payload","name","userEmail","picture","userId","accessToken","client_id","expTime","exp","alldata","jwtToken","localStorage","setItem","JSON","stringify","display","onFailure","err","resendConfirmationCode","result","newPasswordRequired","ConfirmUser","cognitoUser","confirmRegistration","children","heading","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","handlechange","target","value","errormessage","actiontype","to","subheading","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Login.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  CognitoUser,\n  AuthenticationDetails,\n  CognitoUserPool,\n  CognitoUserAttribute,\n} from \"amazon-cognito-identity-js\";\nimport { Link, Navigate, redirect, useNavigate } from \"react-router-dom\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport UserPool from \"./UserPool\";\nimport { Headercontext } from \"../Headerdata/HeaderData\";\nimport { createImageFromInitials } from \"../ImageCreation/createImage\";\nimport { getRandomColor } from \"../ImageCreation/getrandomcolor\";\nimport SocialButton from \"./SocialButton\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Error from \"../common/Error\";\nconst Login = () => {\n  const {\n    setUserDetails,\n    setToken,\n    setLogin,\n    setToastMessage,\n    setConfirmUser,\n    confirmUser,\n    setUserid,\n    verifyJwtFromserver\n  } = useContext(Headercontext);\n  const navigate = useNavigate();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordIcon, setPasswordIcon] = useState(true);\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\",\n  });\n  const [loader, setLoader] = useState(false);\n  const [confirmCode, setConfirmCode] = useState(\"\");\n  const [comfirmLoader, setConfirmLoader] = useState(false);\n\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\",\n    });\n  }, [email, password, confirmCode]);\n\n  var AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\n  const userPool = new CognitoUserPool({\n    UserPoolId: \"ap-northeast-1_ub6BKbCOS\",\n    ClientId: \"40l4r3ri3b721utkclttqju4j8\",\n  });\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool,\n    });\n\n    const authDetails = new AuthenticationDetails({\n      email: email,\n      Password: password,\n    });\n\n    user.authenticateUser(authDetails, {\n      onSuccess: (data) => {\n        console.log(data);\n        let userData = {\n          username: data.idToken.payload.name,\n          userEmail: data.idToken.payload.email,\n          picture: createImageFromInitials(\n            500,\n            data.idToken.payload.name,\n            getRandomColor()\n          ),\n          userId: data.accessToken.payload.client_id,\n          expTime: data.accessToken.payload.exp,\n          alldata: data,\n        };\n        verifyJwtFromserver();\n        setUserDetails(userData);\n        setToken(data.accessToken.jwtToken);\n        setUserid(data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_ID\", data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_details\", JSON.stringify(userData));\n        localStorage.setItem(\"token\", data.accessToken.jwtToken);\n        setLoader(false);\n        setLogin(false);\n        setToastMessage({\n          display: true,\n          message: \"Logged in successfully\",\n        });\n        navigate(\"/\");\n      },\n      onFailure: (err) => {\n        // toast(err.message || JSON.stringify(err));\n        if (err.message == \"User is not confirmed.\") {\n          const confirmUser = new CognitoUser({\n            Username: email,\n            Pool: userPool,\n          });\n          confirmUser.resendConfirmationCode((err, result) => {\n            if (err) {\n              setError({\n                isError: true,\n                message: err.message || JSON.stringify(err),\n              });\n            } else {\n              setToastMessage({\n                display: true,\n                message: \"Confirmation code sent to email\",\n              });\n              setConfirmUser(true);\n              setLoader(false);\n              // navigate(\"/verify\");\n            }\n          });\n        } else {\n          setLoader(false);\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err),\n          });\n        }\n      },\n      newPasswordRequired: (data) => {\n        // console.log(\"newPasswordRequired:\", data);\n      },\n    });\n  };\n\n  const ConfirmUser = (e) => {\n    e.preventDefault();\n    setConfirmLoader(true);\n    let userData = {\n      Username: email,\n      Pool: userPool,\n    };\n    let cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n    cognitoUser.confirmRegistration(confirmCode, true, function (err) {\n      if (err) {\n        setConfirmLoader(false);\n        setError({\n          isError: true,\n          message: err.message || JSON.stringify(err),\n        });\n        return;\n      }\n      setToastMessage({\n        display: true,\n        message: \"Confirmed Succesfully\",\n      });\n      setConfirmLoader(false);\n      onSubmit(e);\n      setConfirmUser(false);\n      navigate(\"/\");\n    });\n  };\n\n  return (\n    <Layout>\n      {!confirmUser ? (\n        <Innerlayout heading={\"Sign In\"} onSubmit={(e) => onSubmit(e)}>\n          <div className=\"socialbuttons\">\n            <SocialButton />\n          </div>\n          <div className=\"divider\">or login with email</div>\n\n          <Inputbox\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            required\n            heading=\"Email*\"\n            handlechange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <Inputbox\n            type=\"password\"\n            placeholder=\"******\"\n            required\n            heading=\"Password*\"\n            handlechange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          {error.isError && <Error errormessage={error.message} />}\n          <Button actiontype={\"Sign In\"} />\n          <Link to=\"/forgotpassword\">\n            <p className=\"forgot-password\">Forgot Password?</p>\n          </Link>\n          <Link to=\"/signup\">\n            <p className=\"simpletext\">\n              Dont't have an account?{\" \"}\n              <span className=\"forgot-password\">Signup</span>\n            </p>\n          </Link>\n        </Innerlayout>\n      ) : (\n        <Innerlayout\n          heading={\"Verify Email\"}\n          subheading=\"Enter verification code sent to your email to verify.\"\n          onSubmit={(e) => ConfirmUser(e)}\n        >\n          <Inputbox\n            type=\"text\"\n            placeholder=\"000000\"\n            required\n            handlechange={(e) => {\n              setConfirmCode(e.target.value);\n            }}\n          />\n          <Button actiontype={\"verify\"} />\n        </Innerlayout>\n      )}\n    </Layout>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}