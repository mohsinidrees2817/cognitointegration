{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Serververification.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Serververification = () => {\n  async function parseJwt() {\n    var authData = {\n      UserPoolId: \"ap-northeast-1_ZpGAnFl7V\",\n      ClientId: \"7c3np67ouk443m5mmer7ajmi2\",\n      RedirectUriSignIn: \"https://cognito-integration.vercel.app/\",\n      RedirectUriSignOut: \"https://cognito-integration.vercel.app/\",\n      AppWebDomain: \"integration2.auth.ap-northeast-1.amazoncognito.com\",\n      TokenScopesArray: [\"email\"]\n    };\n    var auth = new CognitoAuth(authData);\n    auth.userhandler = {\n      onSuccess: async function (result) {\n        let token = result.idToken.jwtToken;\n        var base64Url = token.split(\".\")[1];\n        var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        var jsonPayload = decodeURIComponent(window.atob(base64).split(\"\").map(function (c) {\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(\"\"));\n        const response = await verifyJwtFromserver(result.accessToken.jwtToken);\n        if (response) {\n          let userdata = JSON.parse(jsonPayload);\n          let userData = {\n            username: userdata === null || userdata === void 0 ? void 0 : userdata.name,\n            userEmail: userdata === null || userdata === void 0 ? void 0 : userdata.email,\n            picture: (userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].providerName) == \"Facebook\" ? `https://graph.facebook.com/me/picture?access_token=${userdata.picture}` : userdata.picture,\n            userId: userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].userId,\n            expTime: userdata === null || userdata === void 0 ? void 0 : userdata.exp,\n            provider: userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].providerName\n          };\n          let user_ID = userdata === null || userdata === void 0 ? void 0 : userdata.identities[0].userId;\n          setUserDetails(userData);\n          localStorage.setItem(\"user_details\", JSON.stringify(userData));\n          setToken(result.accessToken.jwtToken);\n          localStorage.setItem(\"token\", result.accessToken.jwtToken);\n          setUserid(user_ID);\n          localStorage.setItem(\"user_ID\", user_ID);\n          navigate(\"/\");\n        } else {\n          console.log(\"invalid jwt token\");\n          alert(\"fail to login try again later\");\n          navigate(\"/\");\n        }\n      },\n      onFailure: function (err) {\n        console.log(err, \"errrr\");\n      }\n    };\n    var curUrl = window.location.href;\n    auth.parseCognitoWebResponse(curUrl);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"serverVerification\",\n    children: \"verifying from server....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_c = Serververification;\nexport default Serververification;\nvar _c;\n$RefreshReg$(_c, \"Serververification\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Serververification","parseJwt","authData","UserPoolId","ClientId","RedirectUriSignIn","RedirectUriSignOut","AppWebDomain","TokenScopesArray","auth","CognitoAuth","userhandler","onSuccess","result","token","idToken","jwtToken","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","response","verifyJwtFromserver","accessToken","userdata","JSON","parse","userData","username","name","userEmail","email","picture","identities","providerName","userId","expTime","exp","provider","user_ID","setUserDetails","localStorage","setItem","stringify","setToken","setUserid","navigate","console","log","alert","onFailure","err","curUrl","location","href","parseCognitoWebResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Serververification.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Serververification = () => {\n  async function parseJwt() {\n    var authData = {\n      UserPoolId: \"ap-northeast-1_ZpGAnFl7V\",\n      ClientId: \"7c3np67ouk443m5mmer7ajmi2\",\n      RedirectUriSignIn: \"https://cognito-integration.vercel.app/\",\n      RedirectUriSignOut: \"https://cognito-integration.vercel.app/\",\n      AppWebDomain: \"integration2.auth.ap-northeast-1.amazoncognito.com\",\n      TokenScopesArray: [\"email\"],\n    };\n    var auth = new CognitoAuth(authData);\n    auth.userhandler = {\n      onSuccess: async function (result) {\n        let token = result.idToken.jwtToken;\n        var base64Url = token.split(\".\")[1];\n        var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        var jsonPayload = decodeURIComponent(\n          window\n            .atob(base64)\n            .split(\"\")\n            .map(function (c) {\n              return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(\"\")\n        );\n        const response = await verifyJwtFromserver(result.accessToken.jwtToken);\n        if (response) {\n          let userdata = JSON.parse(jsonPayload);\n          let userData = {\n            username: userdata?.name,\n            userEmail: userdata?.email,\n            picture:\n              userdata?.identities[0].providerName == \"Facebook\"\n                ? `https://graph.facebook.com/me/picture?access_token=${userdata.picture}`\n                : userdata.picture,\n            userId: userdata?.identities[0].userId,\n            expTime: userdata?.exp,\n            provider: userdata?.identities[0].providerName,\n          };\n          let user_ID = userdata?.identities[0].userId;\n          setUserDetails(userData);\n          localStorage.setItem(\"user_details\", JSON.stringify(userData));\n          setToken(result.accessToken.jwtToken);\n          localStorage.setItem(\"token\", result.accessToken.jwtToken);\n          setUserid(user_ID);\n          localStorage.setItem(\"user_ID\", user_ID);\n          navigate(\"/\");\n        } else {\n          console.log(\"invalid jwt token\");\n          alert(\"fail to login try again later\");\n          navigate(\"/\");\n        }\n      },\n      onFailure: function (err) {\n        console.log(err, \"errrr\");\n      },\n    };\n    var curUrl = window.location.href;\n    auth.parseCognitoWebResponse(curUrl);\n  }\n  return <div className=\"serverVerification\">verifying from server....</div>;\n};\n\nexport default Serververification;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}