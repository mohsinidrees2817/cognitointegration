{"ast":null,"code":"const getInitials = name => {\n  let initials;\n  const nameSplit = name.split(\" \");\n  const nameLength = nameSplit.length;\n  if (nameLength > 1) {\n    initials = nameSplit[0].substring(0, 1) + nameSplit[nameLength - 1].substring(0, 1);\n  } else if (nameLength === 1) {\n    initials = nameSplit[0].substring(0, 1);\n  } else return;\n  return initials.toUpperCase();\n};\nexport const createImageFromInitials = (size, name, color) => {\n  if (name == null) return;\n  name = getInitials(name);\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  canvas.width = canvas.height = size;\n  context.fillStyle = \"#ffffff\";\n  context.fillRect(0, 0, size, size);\n  context.fillStyle = `${color}50`;\n  context.fillRect(0, 0, size, size);\n  context.fillStyle = color;\n  context.textBaseline = 'middle';\n  context.textAlign = 'center';\n  context.font = `${size / 2}px Roboto`;\n  context.fillText(name, size / 2, size / 2);\n  return canvas.toDataURL();\n};","map":{"version":3,"names":["getInitials","name","initials","nameSplit","split","nameLength","length","substring","toUpperCase","createImageFromInitials","size","color","canvas","document","createElement","context","getContext","width","height","fillStyle","fillRect","textBaseline","textAlign","font","fillText","toDataURL"],"sources":["/Users/mohsinidrees/Desktop/cognito_project/cognito_integration/src/components/ImageCreation/createImage.jsx"],"sourcesContent":["const getInitials = (name) => {\n    let initials;\n    const nameSplit = name.split(\" \");\n    const nameLength = nameSplit.length;\n    if (nameLength > 1) {\n        initials =\n            nameSplit[0].substring(0, 1) +\n            nameSplit[nameLength - 1].substring(0, 1);\n    } else if (nameLength === 1) {\n        initials = nameSplit[0].substring(0, 1);\n    } else return;\n\n    return initials.toUpperCase();\n};\n\nexport const createImageFromInitials = (size, name, color) => {\n    if (name == null) return;\n    name=getInitials(name)\n\n    const canvas=document.createElement('canvas')\n    const context=canvas.getContext('2d')\n    canvas.width=canvas.height=size\n\n    context.fillStyle=\"#ffffff\"\n    context.fillRect(0,0,size,size)\n\n    context.fillStyle=`${color}50`\n    context.fillRect(0,0,size,size)\n\n    context.fillStyle=color;\n    context.textBaseline='middle'\n    context.textAlign='center'\n    context.font =`${size/2}px Roboto`\n    context.fillText(name,(size/2),(size/2))\n\n    return canvas.toDataURL()\n};\n\n"],"mappings":"AAAA,MAAMA,WAAW,GAAIC,IAAI,IAAK;EAC1B,IAAIC,QAAQ;EACZ,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACjC,MAAMC,UAAU,GAAGF,SAAS,CAACG,MAAM;EACnC,IAAID,UAAU,GAAG,CAAC,EAAE;IAChBH,QAAQ,GACJC,SAAS,CAAC,CAAC,CAAC,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAC5BJ,SAAS,CAACE,UAAU,GAAG,CAAC,CAAC,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EACjD,CAAC,MAAM,IAAIF,UAAU,KAAK,CAAC,EAAE;IACzBH,QAAQ,GAAGC,SAAS,CAAC,CAAC,CAAC,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3C,CAAC,MAAM;EAEP,OAAOL,QAAQ,CAACM,WAAW,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGA,CAACC,IAAI,EAAET,IAAI,EAAEU,KAAK,KAAK;EAC1D,IAAIV,IAAI,IAAI,IAAI,EAAE;EAClBA,IAAI,GAACD,WAAW,CAACC,IAAI,CAAC;EAEtB,MAAMW,MAAM,GAACC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC7C,MAAMC,OAAO,GAACH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACrCJ,MAAM,CAACK,KAAK,GAACL,MAAM,CAACM,MAAM,GAACR,IAAI;EAE/BK,OAAO,CAACI,SAAS,GAAC,SAAS;EAC3BJ,OAAO,CAACK,QAAQ,CAAC,CAAC,EAAC,CAAC,EAACV,IAAI,EAACA,IAAI,CAAC;EAE/BK,OAAO,CAACI,SAAS,GAAE,GAAER,KAAM,IAAG;EAC9BI,OAAO,CAACK,QAAQ,CAAC,CAAC,EAAC,CAAC,EAACV,IAAI,EAACA,IAAI,CAAC;EAE/BK,OAAO,CAACI,SAAS,GAACR,KAAK;EACvBI,OAAO,CAACM,YAAY,GAAC,QAAQ;EAC7BN,OAAO,CAACO,SAAS,GAAC,QAAQ;EAC1BP,OAAO,CAACQ,IAAI,GAAG,GAAEb,IAAI,GAAC,CAAE,WAAU;EAClCK,OAAO,CAACS,QAAQ,CAACvB,IAAI,EAAES,IAAI,GAAC,CAAC,EAAGA,IAAI,GAAC,CAAE,CAAC;EAExC,OAAOE,MAAM,CAACa,SAAS,CAAC,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}