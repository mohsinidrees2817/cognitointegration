[{"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/index.js":"1","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/reportWebVitals.js":"2","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/App.js":"3","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/pages/Home.jsx":"4","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Requestcode.jsx":"5","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Login.jsx":"6","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Signup.jsx":"7","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/SetPassword.jsx":"8","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Verifycode.jsx":"9","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/ForgotPassword.jsx":"10","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/layout/Innerlayout.jsx":"11","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/SocialButton.jsx":"12","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/layout/index.jsx":"13","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Button.jsx":"14","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Inputbox.jsx":"15","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/UserPool.jsx":"16","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/ButtonSignup.jsx":"17","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Error.jsx":"18","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/ImageCreation/createImage.jsx":"19","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/ImageCreation/getrandomcolor.jsx":"20","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Passwordbox.jsx":"21","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/Maincontext/HeaderData.jsx":"22"},{"size":535,"mtime":1683721643379,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1683721643379,"results":"25","hashOfConfig":"24"},{"size":1167,"mtime":1683887412918,"results":"26","hashOfConfig":"24"},{"size":2407,"mtime":1683887456636,"results":"27","hashOfConfig":"24"},{"size":734,"mtime":1683886701364,"results":"28","hashOfConfig":"24"},{"size":4349,"mtime":1683889210272,"results":"29","hashOfConfig":"24"},{"size":3523,"mtime":1683887476654,"results":"30","hashOfConfig":"24"},{"size":2130,"mtime":1683887122792,"results":"31","hashOfConfig":"24"},{"size":587,"mtime":1683887171692,"results":"32","hashOfConfig":"24"},{"size":4548,"mtime":1683887773162,"results":"33","hashOfConfig":"24"},{"size":440,"mtime":1683753628675,"results":"34","hashOfConfig":"24"},{"size":4629,"mtime":1683887366029,"results":"35","hashOfConfig":"24"},{"size":196,"mtime":1683731165128,"results":"36","hashOfConfig":"24"},{"size":242,"mtime":1683884659753,"results":"37","hashOfConfig":"24"},{"size":347,"mtime":1683874594674,"results":"38","hashOfConfig":"24"},{"size":215,"mtime":1683751801381,"results":"39","hashOfConfig":"24"},{"size":189,"mtime":1683734330441,"results":"40","hashOfConfig":"24"},{"size":681,"mtime":1683750444885,"results":"41","hashOfConfig":"24"},{"size":1021,"mtime":1683722757439,"results":"42","hashOfConfig":"24"},{"size":212,"mtime":1683722757441,"results":"43","hashOfConfig":"24"},{"size":970,"mtime":1683874729424,"results":"44","hashOfConfig":"24"},{"size":5845,"mtime":1683901642697,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1kym1ni",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"49"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/index.js",[],[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/reportWebVitals.js",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/App.js",["121"],[],"import \"./App.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Login from \"./components/authentication/Login\";\nimport Signup from \"./components/authentication/Signup\";\nimport Verifycode from \"./components/authentication/Verifycode\";\nimport Requestcode from \"./components/authentication/Requestcode\";\nimport HeaderData from \"./components/Maincontext/HeaderData\";\nimport ForgotPassword from \"./components/authentication/ForgotPassword\";\nimport SetPassword from \"./components/authentication/SetPassword\";\nimport Home from \"./pages/Home\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <HeaderData>\n        <Routes>\n          <Route path=\"/signin\" element={<Login />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/verify\" element={<Verifycode />} />\n          <Route path=\"/requestcode\" element={<Requestcode />} />\n          <Route path=\"/forgotpassword\" element={<ForgotPassword />} />\n          {/* <Route path=\"/setpassword\" element={<SetPassword />} /> */}\n\n          <Route path=\"/\" element={<Home />} />\n        </Routes>\n      </HeaderData>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/pages/Home.jsx",["122","123","124","125"],[],"import { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Layout from \"../components/layout/index\";\nimport Innerlayout from \"../components/layout/Innerlayout\";\n// import Header from \"../components/Headerdata/HeaderData\";\nimport { Headercontext } from \"../components/Maincontext/HeaderData\";\nimport Button from \"../components/common/Button\";\nconst Home = () => {\n  const navigate = useNavigate();\n\n  const { userDetails, token, setLogin, setToken, setToastMessage } =\n    useContext(Headercontext);\n  const [logoutState, setLogoutState] = useState(false);\n\n  function logOut() {\n    localStorage.clear();\n    setToken(null);\n    setToastMessage({\n      display: true,\n      message: \"Logged Out Successfully\",\n    });\n    setLogoutState(false);\n  }\n  return (\n    <Layout>\n      <Innerlayout heading={\"User Data\"}>\n        {token ? (\n          <>\n            <div className=\"\">\n              <>\n                <div className=\"userdetails-main\">\n                  <div className=\"userdetails-inner\">\n                    {userDetails.picture && (\n                      <img src={userDetails.picture} className=\"userpicture\" />\n                    )}\n                    <p className=\"\">\n                      <span className=\"attribute\">Name:</span>{\" \"}\n                      {userDetails.username}\n                    </p>\n                    <p className=\"\">\n                      <span className=\"attribute\">UserEmail:</span>{\" \"}\n                      {userDetails.userEmail}\n                    </p>\n                    {/* <p className=\"jwttoken\">\n                      <span className=\"attribute\">Jwt Token:</span>{\" \"}\n                      {userDetails.alldata?.idToken?.jwtToken}\n                    </p> */}\n                  </div>\n                  <div className=\"\" onClick={logOut}>\n                    {/* <img\n                        src=\"../assets/icon/logout.png\"\n                        className=\"w-[15px]\"\n                      /> */}\n                    <Button actiontype={\"Log Out\"} />\n                  </div>\n                </div>\n              </>\n            </div>\n          </>\n        ) : (\n          <Link to=\"/signin\">\n            <div className=\"button-logout\">\n              <Button actiontype={\"Sign In\"} />\n            </div>\n          </Link>\n        )}\n      </Innerlayout>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Requestcode.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Login.jsx",["126","127","128","129","130","131"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  CognitoUser,\n  AuthenticationDetails,\n  CognitoUserPool,\n} from \"amazon-cognito-identity-js\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport UserPool from \"./UserPool\";\nimport { Headercontext } from \"../Maincontext/HeaderData\";\nimport { createImageFromInitials } from \"../ImageCreation/createImage\";\nimport { getRandomColor } from \"../ImageCreation/getrandomcolor\";\nimport SocialButton from \"./SocialButton\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Error from \"../common/Error\";\nimport Passwordbox from \"../common/Passwordbox\";\nconst Login = () => {\n  const {\n    setUserDetails,\n    setToken,\n    setToastMessage,\n    setConfirmUser,\n    confirmUser,\n    setUserid,\n    verifyJwtFromserver,\n  } = useContext(Headercontext);\n  const navigate = useNavigate();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\",\n  });\n  const [confirmCode, setConfirmCode] = useState(\"\");\n\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\",\n    });\n  }, [email, password, confirmCode]);\n\n  var AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\n  const userPool = new CognitoUserPool({\n    UserPoolId: \"ap-northeast-1_ub6BKbCOS\",\n    ClientId: \"40l4r3ri3b721utkclttqju4j8\",\n  });\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool,\n    });\n\n    const authDetails = new AuthenticationDetails({\n      email: email,\n      Password: password,\n    });\n\n    user.authenticateUser(authDetails, {\n      onSuccess: (data) => {\n        console.log(data.accessToken.jwtToken, \" accesstoken\");\n        let userData = {\n          username: data.idToken.payload.name,\n          userEmail: data.idToken.payload.email,\n          picture: createImageFromInitials(\n            500,\n            data.idToken.payload.name,\n            getRandomColor()\n          ),\n          userId: data.accessToken.payload.client_id,\n          expTime: data.accessToken.payload.exp,\n          alldata: data,\n        };\n        verifyJwtFromserver(data.accessToken.jwtToken);\n        setUserDetails(userData);\n        setToken(data.accessToken.jwtToken);\n        setUserid(data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_ID\", data.accessToken.payload.client_id);\n        localStorage.setItem(\"user_details\", JSON.stringify(userData));\n        localStorage.setItem(\"token\", data.accessToken.jwtToken);\n        setToastMessage({\n          display: true,\n          message: \"Logged in successfully\",\n        });\n        navigate(\"/\");\n      },\n      onFailure: (err) => {\n        if (err.message == \"User is not confirmed.\") {\n          navigate(\"/verify\");\n        } else {\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err),\n          });\n        }\n      },\n      newPasswordRequired: (data) => {},\n    });\n  };\n\n  return (\n    <Layout>\n      <Innerlayout heading={\"Sign In\"} onSubmit={(e) => onSubmit(e)}>\n        <div className=\"socialbuttons\">\n          <SocialButton />\n        </div>\n        <div className=\"divider\">or login with email</div>\n\n        <Inputbox\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          required\n          heading=\"Email*\"\n          handlechange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <Passwordbox\n          placeholder=\"******\"\n          required\n          heading=\"Password*\"\n          handlechange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        {error.isError && <Error errormessage={error.message} />}\n        <Button actiontype={\"Sign In\"} />\n        <Link to=\"/forgotpassword\">\n          <p className=\"link-page\">Forgot Password?</p>\n        </Link>\n        <Link to=\"/signup\">\n          <p className=\"simpletext\">\n            Dont't have an account? <span className=\"link-page\">Signup</span>\n          </p>\n        </Link>\n      </Innerlayout>\n    </Layout>\n  );\n};\n\nexport default Login;\n","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Signup.jsx",["132","133","134","135","136"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Headercontext } from \"../Maincontext/HeaderData\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Error from \"../common/Error\";\nimport Passwordbox from \"../common/Passwordbox\";\nimport { Link } from \"react-router-dom\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nconst Signup = () => {\n  const navigate = useNavigate();\n  const { token, setSignup, setLogin, setToastMessage } =\n    useContext(Headercontext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\",\n  });\n\n  var AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\n\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\",\n    });\n  }, [email, password, name, confirmpassword]);\n\n  const poolData = {\n    UserPoolId: \"ap-northeast-1_ZpGAnFl7V\",\n    ClientId: \"7c3np67ouk443m5mmer7ajmi2\",\n  };\n\n  var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n\n  var attributeList = [];\n\n  var dataEmail = {\n    Name: \"email\",\n    Value: email,\n  };\n\n  var dataName = {\n    Name: \"name\",\n    Value: name,\n  };\n\n  var attributeEmail = new AmazonCognitoIdentity.CognitoUserAttribute(\n    dataEmail\n  );\n\n  var attributeName = new AmazonCognitoIdentity.CognitoUserAttribute(dataName);\n\n  attributeList.push(attributeEmail);\n  attributeList.push(attributeName);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (password != confirmpassword) {\n      setError({\n        isError: true,\n        message: \"Passwords do not match\",\n      });\n    } else {\n      userPool.signUp(\n        email,\n        password,\n        attributeList,\n        null,\n        function (err, result) {\n          if (err) {\n            setError({\n              isError: true,\n              message: err.message || JSON.stringify(err),\n            });\n            return;\n          }\n          setError({\n            isError: false,\n            message: \"\",\n          });\n          navigate(\"/verify\");\n        }\n      );\n    }\n  };\n\n  return (\n    <Layout>\n      <Innerlayout heading={\"Sign up\"} onSubmit={(e) => onSubmit(e)}>\n        <Inputbox\n          type=\"email\"\n          placeholder=\"Email*\"\n          required\n          handlechange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <Inputbox\n          type=\"text\"\n          placeholder=\"Name\"\n          handlechange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <Passwordbox\n          placeholder=\"Password*\"\n          required\n          handlechange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <Passwordbox\n          placeholder=\"Confirm Passsword*\"\n          required\n          handlechange={(e) => {\n            setConfirmPassword(e.target.value);\n          }}\n        />\n        {error.isError && <Error errormessage={error.message} />}\n        <div className=\"Signup-buttons\">\n          <Link to=\"/\">\n            <div className=\"signup-cancel\">CANCEL</div>\n          </Link>\n\n          <button className=\"signup-button\" type=\"submit\">\n            SIGN UP\n          </button>\n        </div>\n      </Innerlayout>\n    </Layout>\n  );\n};\n\nexport default Signup;\n","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/SetPassword.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/Verifycode.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/ForgotPassword.jsx",["137"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { Headercontext } from \"../Maincontext/HeaderData\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"../layout\";\nimport Innerlayout from \"../layout/Innerlayout\";\nimport Inputbox from \"../common/Inputbox\";\nimport Button from \"../common/Button\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserPool from \"./UserPool\";\nimport Passwordbox from \"../common/Passwordbox\";\nimport Error from \"../common/Error\";\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n\n  const { setForgetPassword, setToastMessage } = useContext(Headercontext);\n\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewpassword] = useState(\"\");\n  const [confirmPassword, setConfirmpassword] = useState(\"\");\n  const [isVerifyCode, setIsverifycode] = useState(false);\n  const [verificationCode, setVerificationcode] = useState(\"\");\n\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\",\n  });\n\n  useEffect(() => {\n    setError({\n      isError: false,\n      message: \"\",\n    });\n  }, [email, newPassword, confirmPassword, verificationCode]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const user = new CognitoUser({\n      Username: email,\n      Pool: UserPool,\n    });\n\n    if (!isVerifyCode) {\n      user.forgotPassword({\n        onSuccess: function (result) {\n          console.log(\"call result: \" + result);\n        },\n        onFailure: function (err) {\n          console.log(err);\n          setError({\n            isError: true,\n            message: err.message || JSON.stringify(err),\n          });\n        },\n        inputVerificationCode: (data) => {\n          console.log(\"Input code:\", data);\n          setIsverifycode(true);\n        },\n      });\n    } else {\n      if (confirmPassword == newPassword) {\n        user.confirmPassword(verificationCode, newPassword, {\n          onSuccess: (data) => {\n            console.log(\"onSuccess:\", data);\n            setToastMessage({\n              display: true,\n              message: \"password updated succesfully\",\n            });\n            setForgetPassword(false);\n            navigate(\"/signin\");\n          },\n          onFailure: (err) => {\n            setError({\n              isError: true,\n              message: err.message || JSON.stringify(err),\n            });\n          },\n        });\n      } else {\n        setError({\n          isError: true,\n          message: \"Password and confirmed password are diffferent\",\n        });\n      }\n    }\n  };\n\n  return (\n    <Layout>\n      {!isVerifyCode && (\n        <Innerlayout\n          heading={\"Forgot Password\"}\n          subheading=\"An email with a link will be sent to your email address to change password.\"\n          onSubmit={(e) => onSubmit(e)}\n        >\n          <Inputbox\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            required\n            heading=\"Email*\"\n            handlechange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <Button actiontype={\"Forgot Password\"} type=\"submit\" />\n          <div>\n            <p className=\"simpletext\">Have you remembered your password</p>\n            <Link to=\"/signin\">\n              <p className=\"forgot-password\">Sign In</p>\n            </Link>\n          </div>\n        </Innerlayout>\n      )}\n      {isVerifyCode && (\n        <Innerlayout\n          heading={\"Set Password\"}\n          subheading=\"Enter a code sent to your email and add new password.\"\n          onSubmit={(e) => {\n            onSubmit(e);\n          }}\n        >\n          <Inputbox\n            type=\"text\"\n            placeholder=\"000000\"\n            required\n            heading=\"Code\"\n            handlechange={(e) => {\n              setVerificationcode(e.target.value);\n            }}\n          />\n          <Passwordbox\n            placeholder=\"********\"\n            required\n            heading=\"Password\"\n            handlechange={(e) => {\n              setNewpassword(e.target.value);\n            }}\n          />\n          <Passwordbox\n            placeholder=\"********\"\n            required\n            heading=\"Repeat Password\"\n            handlechange={(e) => {\n              setConfirmpassword(e.target.value);\n            }}\n          />\n          {error.isError && <Error errormessage={error.message} />}\n\n          <Button actiontype={\"Set Password\"} />\n        </Innerlayout>\n      )}\n    </Layout>\n  );\n};\n\nexport default ForgotPassword;\n","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/layout/Innerlayout.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/SocialButton.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/layout/index.jsx",["138"],[],"import React from \"react\";\nimport Innerlayout from \"./Innerlayout\";\nconst index = ({ children, ...props }) => {\n  return <div className=\"maincontainer\">{children}</div>;\n};\n\nexport default index;\n","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Button.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Inputbox.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/authentication/UserPool.jsx",["139"],[],"import { CognitoUserPool } from \"amazon-cognito-identity-js\";\n\nconst poolData = {\n  UserPoolId: \"ap-northeast-1_ZpGAnFl7V\",\n  ClientId: \"7c3np67ouk443m5mmer7ajmi2\",\n};\n\nexport default new CognitoUserPool(poolData);\n","/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/ButtonSignup.jsx",[],[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Error.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/ImageCreation/createImage.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/ImageCreation/getrandomcolor.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/common/Passwordbox.jsx",[],[],"/Users/mohsinidrees/Desktop/cognito_project/frontend/src/components/Maincontext/HeaderData.jsx",["140","141","142"],[],{"ruleId":"143","severity":1,"message":"144","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":19},{"ruleId":"143","severity":1,"message":"147","line":9,"column":9,"nodeType":"145","messageId":"146","endLine":9,"endColumn":17},{"ruleId":"143","severity":1,"message":"148","line":11,"column":31,"nodeType":"145","messageId":"146","endLine":11,"endColumn":39},{"ruleId":"143","severity":1,"message":"149","line":13,"column":10,"nodeType":"145","messageId":"146","endLine":13,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":34,"column":23,"nodeType":"152","endLine":34,"endColumn":80},{"ruleId":"143","severity":1,"message":"153","line":25,"column":5,"nodeType":"145","messageId":"146","endLine":25,"endColumn":19},{"ruleId":"143","severity":1,"message":"154","line":26,"column":5,"nodeType":"145","messageId":"146","endLine":26,"endColumn":16},{"ruleId":"143","severity":1,"message":"155","line":38,"column":23,"nodeType":"145","messageId":"146","endLine":38,"endColumn":37},{"ruleId":"143","severity":1,"message":"156","line":47,"column":7,"nodeType":"145","messageId":"146","endLine":47,"endColumn":28},{"ruleId":"143","severity":1,"message":"157","line":48,"column":9,"nodeType":"145","messageId":"146","endLine":48,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":94,"column":25,"nodeType":"160","messageId":"161","endLine":94,"endColumn":27},{"ruleId":"143","severity":1,"message":"162","line":15,"column":11,"nodeType":"145","messageId":"146","endLine":15,"endColumn":16},{"ruleId":"143","severity":1,"message":"163","line":15,"column":18,"nodeType":"145","messageId":"146","endLine":15,"endColumn":27},{"ruleId":"143","severity":1,"message":"148","line":15,"column":29,"nodeType":"145","messageId":"146","endLine":15,"endColumn":37},{"ruleId":"143","severity":1,"message":"164","line":15,"column":39,"nodeType":"145","messageId":"146","endLine":15,"endColumn":54},{"ruleId":"158","severity":1,"message":"165","line":66,"column":18,"nodeType":"160","messageId":"161","endLine":66,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":61,"column":27,"nodeType":"160","messageId":"161","endLine":61,"endColumn":29},{"ruleId":"143","severity":1,"message":"166","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":8,"column":1,"nodeType":"169","endLine":8,"endColumn":46},{"ruleId":"143","severity":1,"message":"170","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":86,"column":52,"nodeType":"160","messageId":"161","endLine":86,"endColumn":54},{"ruleId":"171","severity":1,"message":"172","line":151,"column":6,"nodeType":"173","endLine":151,"endColumn":8,"suggestions":"174"},"no-unused-vars","'SetPassword' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'logoutState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setConfirmUser' is assigned a value but never used.","'confirmUser' is assigned a value but never used.","'setConfirmCode' is assigned a value but never used.","'AmazonCognitoIdentity' is assigned a value but never used.","'userPool' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'token' is assigned a value but never used.","'setSignup' is assigned a value but never used.","'setToastMessage' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Innerlayout' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'IsloggedIn'. Either include it or remove the dependency array.","ArrayExpression",["175"],{"desc":"176","fix":"177"},"Update the dependencies array to be: [IsloggedIn]",{"range":"178","text":"179"},[5254,5256],"[IsloggedIn]"]